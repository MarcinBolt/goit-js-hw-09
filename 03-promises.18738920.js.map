{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,SAC9BI,EAAaL,SAASM,iBAAiB,SACvCC,EAAaP,SAASM,iBAAiB,SACvCE,EAASR,SAASC,cAAc,UA8BtC,SAASQ,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAQC,QAAU,IAAIC,SAAQ,SAACC,EAASC,GACtCC,YAAW,WACLP,EAEFK,EAAQ,CACNP,SAAUA,EACVC,MAAOA,IAITO,EAAO,CACLR,SAAUA,EACVC,MAAOA,G,GAGVA,E,IA5CPP,EAAKgB,MAAMC,QAAU,OACrBjB,EAAKgB,MAAME,IAAM,OAGjBjB,EAAWkB,SAAQ,SAAAC,GACjBA,EAAMJ,MAAMC,QAAU,OACtBG,EAAMJ,MAAMK,cAAgB,SAC5BD,EAAMJ,MAAMM,SAAW,OACvBF,EAAMJ,MAAMO,WAAa,K,IAG3BpB,EAAWgB,SAAQ,SAAAK,GACjBA,EAAMR,MAAMC,QAAU,OACtBO,EAAMR,MAAMK,cAAgB,SAC5BG,EAAMR,MAAMM,SAAW,OACvBE,EAAMR,MAAMO,WAAa,K,IAG3BnB,EAAOY,MAAMC,QAAU,OACvBb,EAAOY,MAAMS,eAAiB,WAC9BrB,EAAOY,MAAMM,SAAW,OACxBlB,EAAOY,MAAMO,WAAa,MAC1BnB,EAAOY,MAAMU,OAAS,OACtBtB,EAAOY,MAAMW,UAAY,OAiDzB3B,EAAK4B,iBAAiB,UAxBtB,SAAsBC,GACpBA,EAAMC,iBAON,IALA,IAAIC,EAAeC,OAAOrC,EAAgBsC,OACtCC,EAAcF,OAAOlC,EAAemC,OACpCE,EAASH,OAAOjC,EAAYkC,OAC5BG,EAAOL,EAEFM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BhC,EAAcgC,EAAGD,GACdE,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MACjBiC,EAAA/C,GAASgD,OAAOC,QACd,uBAAwCC,OAAfrC,EAAS,QAAYqC,OAANpC,EAAM,M,IAGjDqC,OAAM,SAAAL,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MAClBiC,EAAA/C,GAASgD,OAAOI,QACd,sBAAqCF,OAAfrC,EAAS,QAAYqC,OAANpC,EAAM,M,IAGjD6B,GAAcF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst formLabels = document.querySelectorAll('label');\nconst formInputs = document.querySelectorAll('input');\nconst button = document.querySelector('button');\n\n// ELEMENTS STYLING //\nform.style.display = 'flex';\nform.style.gap = '15px';\n// form.style.justifyContent = 'flex-end';\n\nformLabels.forEach(label => {\n  label.style.display = 'flex';\n  label.style.flexDirection = 'column';\n  label.style.fontSize = '18px';\n  label.style.lineHeight = '1.5';\n});\n\nformInputs.forEach(input => {\n  input.style.display = 'flex';\n  input.style.flexDirection = 'column';\n  input.style.fontSize = '18px';\n  input.style.lineHeight = '1.5';\n});\n\nbutton.style.display = 'flex';\nbutton.style.justifyContent = 'flex-end';\nbutton.style.fontSize = '18px';\nbutton.style.lineHeight = '1.5';\nbutton.style.height = '33px';\nbutton.style.marginTop = '27px';\n\n// ELEMENTS STYLING //\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return (promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({\n          position: position,\n          delay: delay,\n        });\n      } else {\n        // Reject\n        reject({\n          position: position,\n          delay: delay,\n        });\n      }\n    }, delay);\n  }));\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let firstDelayMs = Number(firstDelayInput.value);\n  let delayStepMs = Number(delayStepInput.value);\n  let amount = Number(amountInput.value);\n  let step = firstDelayMs;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    step = step + delayStepMs;\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelayInput","document","querySelector","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$formLabels","querySelectorAll","$ce04d3a99e08e73b$var$formInputs","$ce04d3a99e08e73b$var$button","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promise","Promise","resolve","reject","setTimeout","style","display","gap","forEach","label","flexDirection","fontSize","lineHeight","input","justifyContent","height","marginTop","addEventListener","event","preventDefault","firstDelayMs","Number","value","delayStepMs","amount","step","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.18738920.js.map"}