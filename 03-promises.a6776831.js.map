{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAkBC,SAASC,cAAc,uBACzCC,EAAiBF,SAASC,cAAc,sBACxCE,EAAcH,SAASC,cAAc,wBACrCG,EAAOJ,SAASC,cAAc,SAC9BI,EAAaL,SAASM,iBAAiB,SACvCC,EAAaP,SAASM,iBAAiB,SACvCE,EAASR,SAASC,cAAc,UA2BtC,SAASQ,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EAEFI,EAAQ,CACNN,SAAUA,EACVC,MAAOA,IAITM,EAAO,CACLP,SAAUA,EACVC,MAAOA,GACP,GAEHA,EAAM,G,CAzCbP,EAAKe,MAAMC,QAAU,OACrBhB,EAAKe,MAAME,IAAM,OACjBb,EAAOW,MAAMC,QAAU,OACvBZ,EAAOW,MAAMG,eAAiB,WAC9Bd,EAAOW,MAAMI,SAAW,OACxBf,EAAOW,MAAMK,WAAa,MAC1BhB,EAAOW,MAAMM,OAAS,OACtBjB,EAAOW,MAAMO,UAAY,OAEzBrB,EAAWsB,SAAQC,IACjBA,EAAMT,MAAMC,QAAU,OACtBQ,EAAMT,MAAMU,cAAgB,SAC5BD,EAAMT,MAAMI,SAAW,OACvBK,EAAMT,MAAMK,WAAa,KAAK,IAGhCjB,EAAWoB,SAAQG,IACjBA,EAAMX,MAAMC,QAAU,OACtBU,EAAMX,MAAMU,cAAgB,SAC5BC,EAAMX,MAAMI,SAAW,OACvBO,EAAMX,MAAMK,WAAa,KAAK,IAiDhCpB,EAAK2B,iBAAiB,UAxBtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAeC,OAAOpC,EAAgBqC,OACtCC,EAAcF,OAAOjC,EAAekC,OACpCE,EAASH,OAAOhC,EAAYiC,OAC5BG,EAAOL,EAEX,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3B/B,EAAc+B,EAAGD,GACdE,MAAK,EAAC/B,SAAEA,EAAQC,MAAEA,MACjB+B,EAAA7C,GAAS8C,OAAOC,QACd,uBAAqBlC,QAAiBC,MAAU,IAGnDkC,OAAM,EAACnC,SAAEA,EAAQC,MAAEA,MAClB+B,EAAA7C,GAAS8C,OAAOG,QACd,sBAAoBpC,QAAeC,MAAU,IAGnD4B,GAAcF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelayInput = document.querySelector('input[name=\"delay\"]');\nconst delayStepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst formLabels = document.querySelectorAll('label');\nconst formInputs = document.querySelectorAll('input');\nconst button = document.querySelector('button');\n\n// ELEMENTS STYLING //\nform.style.display = 'flex';\nform.style.gap = '15px';\nbutton.style.display = 'flex';\nbutton.style.justifyContent = 'flex-end';\nbutton.style.fontSize = '18px';\nbutton.style.lineHeight = '1.5';\nbutton.style.height = '33px';\nbutton.style.marginTop = '27px';\n\nformLabels.forEach(label => {\n  label.style.display = 'flex';\n  label.style.flexDirection = 'column';\n  label.style.fontSize = '18px';\n  label.style.lineHeight = '1.5';\n});\n\nformInputs.forEach(input => {\n  input.style.display = 'flex';\n  input.style.flexDirection = 'column';\n  input.style.fontSize = '18px';\n  input.style.lineHeight = '1.5';\n});\n// ELEMENTS STYLING //\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({\n          position: position,\n          delay: delay,\n        });\n      } else {\n        // Reject\n        reject({\n          position: position,\n          delay: delay,\n        });\n      }\n    }, delay);\n  });\n}\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  let firstDelayMs = Number(firstDelayInput.value);\n  let delayStepMs = Number(delayStepInput.value);\n  let amount = Number(amountInput.value);\n  let step = firstDelayMs;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    step = step + delayStepMs;\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$firstDelayInput","document","querySelector","$47d4ff9957288465$var$delayStepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$form","$47d4ff9957288465$var$formLabels","querySelectorAll","$47d4ff9957288465$var$formInputs","$47d4ff9957288465$var$button","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","style","display","gap","justifyContent","fontSize","lineHeight","height","marginTop","forEach","label","flexDirection","input","addEventListener","event","preventDefault","firstDelayMs","Number","value","delayStepMs","amount","step","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.a6776831.js.map"}